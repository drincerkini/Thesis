@model PaginatedList<SchoolManagmentSystem.Models.AcStaff>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Academic Staff</h1>

<div class="container d-flex justify-content-between">


    <p>
        @if (User.IsInRole("Super Admin") || User.IsInRole("Academic Staff"))
        {
            <button class="btn btn btn-outline-light">
                <a class="btn btn-outline-light text-primary" asp-action="Create">Create New Academic Staff</a>
            </button>
        }
    </p>
    <form asp-action="Index" method="get">
        <div class="input-group">
            <div class="form-outline">
                <input type="search" id="form1" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search Staff" />
            </div>
            <button type="submit" class="btn btn-light">
                Search
            </button>
        </div>
    </form>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model[0].Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SurnameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model[0].Surname)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Branch)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                </td>
                <td>
                    <strong>@Html.DisplayFor(modelItem => item.Surname)</strong>
                </td>
                <th>
                    @Html.DisplayFor(modelItem => item.Branch.Name)
                </th>
                <td class="text-end">
                    @if (User.IsInRole("Super Admin") || User.IsInRole("Academic Staff"))
                    {
                        <a class="btn btn-light text-secondary" asp-action="Edit" asp-route-id="@item.AcStaffID">Edit</a> <span> | </span>
                        <a class="btn btn-light text-secondary" asp-action="Details" asp-route-id="@item.AcStaffID">Details</a> <span> | </span>
                        <a class="btn btn-light text-danger" asp-action="Delete" asp-route-id="@item.AcStaffID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>